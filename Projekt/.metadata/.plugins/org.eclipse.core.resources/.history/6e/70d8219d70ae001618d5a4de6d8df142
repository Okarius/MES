package Services;

import java.util.ArrayList;

/**
 * This class Manages every Service. It gets the Message Payload and gives it to
 * the correct service. The Service returns then the Answer and the
 * ServiceManager passes the Answer to the ClientConnection. To implement a new
 * Service. The service hast to extend the "Service" class. The new implemented
 * services gets then added in the ServiceManagers Constructor.
 * 
 * @author Nikolas
 */
public class ServiceManager extends ArrayList<Service> {

	/**
	 * Add Every Service to this Constructor
	 */
	private String debugMsg;

	public ServiceManager() {
		this.add(new SecretaryPhoneNumberService(this.size(), "SecretaryPhoneNumber"));
	}

	/**
	 * getAnswercheck 
	 * 
	 * @param payload
	 * @return
	 */
	public byte[] getAnswer(String payload) {
		String[] payloadArray = payload.split(";");
		byte[] sendMe = "Invalid Payload".getBytes();
		debugMsg = "Error;Invalid Payload";

		// Is the first value a number(id)?
		if (!isNumeric(payloadArray[0])) {
		 	// if non numeric first Letter it has to be Servies
		 	if (payloadArray[0].compareTo("SERVICES") == 0) {
		 		sendMe = this.getServicesByteArray();
		 		debugMsg = "Services Send";
		 	} else {
		 		// non numeric and not services -> error
		 		String msg = "Error;NonNumeric ID and not SERVICE";
		 		sendMe = msg.getBytes();
		 		debugMsg = msg;
		 	}
		// First value is a Number thus maybe an ID
		} else {
			int serviceId = Integer.valueOf(payloadArray[0]);
			// can this ID exist?
			if (validServiceId(serviceId)) {
				//The id exists, so we can use one of our services
				sendMe = this.get(serviceId).getAnswer(payload);
				debugMsg = this.get(serviceId).debugMsg;
			} else {
				// Invalid ID -> Send Error Message
		 		String msg = "Error;Invalid ID ";
		 		sendMe = msg.getBytes();
		 		debugMsg = msg;
			}
		}
		return sendMe;
	}

	private byte[] getServicesByteArray() {

		return null;
	}

	private boolean validServiceId(int serviceId) {
		// TODO Auto-generated method stub
		return false;
	}

	public String getLastMsgSend() {
		return debugMsg;
	}

	/**
	 * This Function checks if the payloads first value is actually a Integer.
	 * Otherwise we got a bad Msg. (Exception is SERVICES)
	 * 
	 * @param str
	 * @return if the str is a number true
	 */
	private static boolean isNumeric(String str) {
		try {
			int id = Integer.parseInt(str);
		} catch (NumberFormatException nfe) {
			return false;
		}
		return true;
	}
}
