package Model;

/**
 * This classes job is it to read and write the header.
 * 
 * @author Niki+Nico
 *
 */

public class HeaderWorker {
	private byte[] makeHeader(final byte[] payload, final ContentType contentType, final short id,
			final boolean lastMessageFaulty) {
		final int length = payload.length;
		final byte[] bytes = new byte[8];
		final short checksum = createChecksum(payload);
		short flagsAndId = id;
		flagsAndId |= (contentType.ordinal() << 15);
		if (lastMessageFaulty) {
			flagsAndId |= (1 << 14);
		}
		bytes[0] = (byte) (length >> 24);
		bytes[1] = (byte) (length >> 16);
		bytes[2] = (byte) (length >> 8);
		bytes[3] = (byte) length;
		bytes[4] = (byte) (checksum >> 8);
		bytes[5] = (byte) checksum;
		bytes[6] = (byte) (flagsAndId >> 8);
		bytes[7] = (byte) flagsAndId;
		return bytes;
	}

	private short createChecksum(final byte[] message) {         short checksum = 0;         for (byte b : message) {             checksum += b; // the modulo is implicit         }         return checksum;     }
}
